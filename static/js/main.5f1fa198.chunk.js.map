{"version":3,"sources":["components/GameCard/GameCard.js","components/Wrapper/Wrapper.js","components/Jumbotron/Jumbotron.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","alt","name","src","image","handleImageSelected","id","Wrapper","children","Jumbotron","message","Header","gameScore","topScore","Footer","year","App","state","gameImages","selectedImageIds","shuffle","i","length","j","Math","floor","random","_ref","changeShuffledImages","_this","setState","prevState","e","curentImageId","console","log","Object","toConsumableArray","concat","parseInt","includes","shuffledGameImages","this","_this2","components_Header_Header","components_Jumbotron_Jumbotron","components_Wrapper_Wrapper","map","gameImage","components_GameCard_GameCard","key","components_Footer_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5f1fa198.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./GameCard.css\";\r\n\r\nconst GameCard = props => (\r\n  <div className=\"card\" onClick={props.onClick}>\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n    <span onClick={() => props.handleImageSelected(props.id)}>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default GameCard;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper container\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nconst Jumbotron = (props) => (\r\n  <div id=\"page-header\" className=\"jumbotron text-center mb-0\">\r\n    <h1>Let's Play</h1>\r\n    <h4>Click on an image to earn points, but don't click on any image more than once!</h4>\r\n    <div className=\"message\">{props.message}</div>\r\n  </div>\r\n);\r\n\r\nexport default Jumbotron;\r\n\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => (\r\n    <div className=\"d-flex justify-content-around bg-light p-2 mt-0 mb-0\">\r\n        <h2 className=\"mt-2\">{props.children}</h2>\r\n        <h2 className=\"mt-2\">Score: {props.gameScore} | Top Score: {props.topScore}</h2>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = (props) => (\r\n    <footer id=\"main-footer\" className=\"text-center p-0 sticky bg-clicky\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <small className=\"text-muted\">Copyright &copy;<span id=\"year\"> {props.year}</span></small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n    );\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport GameCard from \"./components/GameCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport gameImages from \"./gameImages.json\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n  ///////////////////////////\r\n  // handle state\r\n  ///////////////////////////\r\n\r\n  // load the images from the json array\r\n  state = {\r\n    gameImages: gameImages,\r\n    selectedImageIds: [],\r\n    gameScore: 0,\r\n    topScore: 0\r\n  };\r\n\r\n  ///////////////////////////////////////////\r\n  // Functions\r\n  ///////////////////////////////////////////\r\n\r\n  // Shuffles array in place. ES6 version.  @param {Array} \r\n  shuffle = (a) => {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  /////////////////////////////\r\n  // methods to update state\r\n  /////////////////////////////\r\n  changeShuffledImages = () => {\r\n    this.setState((prevState, props) => {\r\n      const shuffledGameImages = this.shuffle(prevState.gameImages);\r\n\r\n      return { gameImages: shuffledGameImages}\r\n    })\r\n  }\r\n\r\n  /////////////////////////////\r\n  // event handlers\r\n  /////////////////////////////\r\n  handleImageSelected = (e, curentImageId) => {\r\n    console.log(curentImageId);\r\n\r\n    this.setState( (prevState, props) => ({\r\n      selectedImageIds: [...prevState.selectedImageIds, curentImageId],\r\n      gameScore: parseInt(prevState.gameScore,10) + 1,\r\n    }))\r\n\r\n    // if image has already been selected, game is over\r\n    if (this.state.selectedImageIds.includes(curentImageId)) {\r\n      console.log(\"Choosen before!\");\r\n\r\n      // reset the selected images to be empty and the game score to 0\r\n      this.setState( (prevState, props) => ({\r\n        selectedImageIds: [],\r\n        gameScore: 0,\r\n      }))\r\n    } else {\r\n      // set the top score if the current score beats it\r\n      this.setState( (prevState, props) => ({\r\n        topScore: prevState.gameScore >= prevState.topScore ? prevState.gameScore : prevState.topScore\r\n      }))\r\n    }\r\n\r\n    //reshuffle images\r\n    this.changeShuffledImages();\r\n  }\r\n\r\n  /////////////////////////////\r\n  // React methods\r\n  /////////////////////////////\r\n\r\n  componentDidMount() {\r\n    const shuffledGameImages = this.shuffle(this.state.gameImages);\r\n\r\n    this.setState({gameImages: shuffledGameImages})\r\n  }\r\n\r\n  // Map over this.state.gameImages and render a GameCard component for each gameImage object\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header\r\n          gameScore={this.state.gameScore}\r\n          topScore={this.state.topScore}\r\n        >\r\n          Clicky Game\r\n        </Header>\r\n        <Jumbotron\r\n            message={''}\r\n        >\r\n        </Jumbotron>\r\n        <Wrapper>\r\n          {this.state.gameImages.map(gameImage => (\r\n            <GameCard\r\n              // chooseGameImage={this.chooseGameImage}\r\n              id={gameImage.id}\r\n              key={gameImage.id}\r\n              name={gameImage.name}\r\n              image={gameImage.image}\r\n              onClick={ e => this.handleImageSelected(e, gameImage.id)}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n        <Footer\r\n          year={2018}\r\n        >\r\n          Clicky Game\r\n        </Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}